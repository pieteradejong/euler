/*
Project Euler: Problem 2
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

function fibonacci() {
	
	// bootstrap Fibonacci sequence
	var v = 1;
	var w = 2;
	// want even-valued terms, so must maintain separate sum
	var sum = 2;

	while (w <= 4 * Math.pow(10, 6)) {
		var temp = v + w;
		v = w;
		w = temp;
		if (w % 2 === 0) sum += w;
	}

	return sum;
}

function fibonacciRecursive (v, w, sum) {
	var v = v || 1;
	var w = w || 2;
	console.log(sum);
	var sum = sum || 0;
	//console.log(sum);
	
	if (w > Math.pow(10,6)) return sum;

	if (w % 2 === 0) sum += w;
	
	fibonacciRecursive(w, v + w, sum);
}

function fibtest () {return (fibonacci === fibonacciRecursive);}